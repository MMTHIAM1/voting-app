version: '3.8'

services:
  vote:
    build: ./vote
    container_name: vote_service
    # ports: # <-- RETIREZ CETTE LIGNE si Nginx gère l'exposition
    #   - "5000:80"
    networks:
      - frontend
      - backend
    depends_on:
      redis:
        condition: service_healthy
    env_file:
      - ./.env

  result:
    build: ./result
    container_name: result_service
    # ports: # <-- RETIREZ CETTE LIGNE si Nginx gère l'exposition
    #   - "5001:80"
    networks:
      - frontend
      - backend
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./.env

  worker:
    build: ./worker
    container_name: worker_service
    networks:
      - backend
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    env_file:
      - ./.env

  redis:
    image: redis:latest
    container_name: redis_cache
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  db:
    image: postgres:15-alpine
    container_name: votes_db
    # ports: # <-- RETIREZ CETTE LIGNE pour plus de sécurité
    #   - "5432:5432"
    networks:
      - backend
    volumes:
      - db-vote:/var/lib/postgresql/data
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  nginx: # <-- NOUVEAU SERVICE NGINX
    image: nginx:latest
    container_name: voting_nginx
    ports:
      - "80:80"  # HTTP pour la redirection vers HTTPS
      - "443:443" # HTTPS
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs:ro # Monte le dossier des certificats
    depends_on:
      vote: # Nginx dépend des services frontend qu'il va proxyfier
        condition: service_healthy
      result:
        condition: service_healthy
    networks:
      - frontend # Nginx doit être sur le réseau qui accède aux frontends

volumes:
  db-vote:
  # Pas de volume pour Nginx car il n'a pas de données persistantes importantes

networks:
  frontend:
  backend:
